---
# --------------------------------

- name: 'Kafka user'
  group:
    name: '{{kafka_user}}'
    state: present
  become: true
  tags: ct-kafka

- name: 'create Kafka staging dir'
  file:
    path: '{{kafka_staging_dir}}'
    mode: '0755'
    state: directory
  tags: ct-kafka

- name: 'create Kafka install dir'
  file:
    path: '{{kafka_install_dir}}'
    mode: '0755'
    state: directory
  become: true
  tags: ct-kafka

- name: 'create Kafka logs dir'
  file:
    path: '{{kafka_logs_dir}}'
    mode: '0755'
    owner: '{{kafka_user}}'
    group: '{{kafka_user}}'
    state: directory
  become: true
  tags: ct-kafka

- name: 'download Kafka archive'
  get_url:
    url: '{{kafka_url}}'
    dest: '{{kafka_staging_dir}}'
    timeout: '{{kafka_internet_timeout}}'
    validate_certs: false
  tags: ct-kafka

- name: 'expand Kafka archive'
  unarchive:
    src: '{{kafka_staging_dir}}/{{kafka_tarball}}'
    copy: false
    dest: '{{kafka_install_dir}}'
    extra_opts: ['--strip-components=1']
  become: true
  ignore_errors: '{{ansible_check_mode}}'
  tags: ct-kafka

# BLOCK_START
- name: 'block: full install'
  block:
  - name: 'Render Kafka config file'
    template:
      src: server.properties.j2
      dest: '{{kafka_config_dir}}/server.properties'
      mode: '0644'
    become: true
    tags: ct-kafka

  - name: 'HACK Zookeeper connection string (TODO)'  # TODO
    lineinfile:
      line: 'zookeeper.connect={{kafkaclient_brokers}}'
      path: '{{kafka_config_dir}}/server.properties'
      regexp: '^zookeeper.connect='
    become: true
    tags: ct-kafka

  - name: 'render Systemd unit file'
    template:
      src: kafka.service.j2
      dest: /etc/systemd/system/kafka.service
      owner: root
      group: root
      mode: '0600'
    register: reg_service
    become: true
    tags: ct-kafka

  - name: 'enable Kafka service'
    systemd:
      name: kafka
      state: '{{kafka_svc_state}}'
      enabled: '{{kafka_svc_enabled}}'
      daemon_reload: '{{reg_service is changed}}'
    become: true
    tags: ct-kafka
  when: kafka_full_install
# BLOCK_END

# --------------------------------
...
